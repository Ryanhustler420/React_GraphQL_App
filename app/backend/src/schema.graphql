# import * from './generated/prisma.graphql'
# this import above brings Item Type

type SuccessMessage{
    message: String
}

type Mutation {
    createItem(title: String, description: String, price: Int, 
    image: String, largeImage: String): Item!
    updateItem(id: ID!, title: String, description: String, price: Int): Item!
    deleteItem(id: ID!) : Item
    signup(email: String!, password: String!, name: String!): User!
    signin(email: String!, password: String!) : User!
    signout: SuccessMessage
    requestReset(email: String!): SuccessMessage
    resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
}

type Query {
    items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int): [Item]!
    item(where: ItemWhereUniqueInput!): Item
    itemsConnection(where: ItemWhereInput): ItemConnection!
    me: User
    users: [User]!
}

type User {
    id: ID!
    name: String!
    email: String!
    permission: [Permission!]!
}


# public facing API where we interface usally

# # # # # # # # Note:-
    # Dog! means we can't return null for any item
    # so [{name: 'Snickers'}] os valid
    # so [{name: 'Snikers'}, null] is not